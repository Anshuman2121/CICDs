#CD

name: Deploy Workflow
on: 
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: 'Env to deploy to'
        options: 
        - dev
        - prod
        - qa
        required: true
        default: 'dev'

      image-tag:
        description: 'Docker tag to deploy'
        required: true
        default: 'latest'

env:
  DOCKER_REGISTRY: "dockerhub.io" #could be jfrog
  IMAGE_TAG: "${{  github.event.inputs.image-tag  }}"
  ENV: "${{  github.event.inputs.deploy-environment  }}"

jobs:
  deploy:
    name: "${{  github.event.inputs.deploy-environment  }} deploy tag : ${{  github.event.inputs.image-tag  }}"
    environment: ${{  github.event.inputs.deploy-environment  }}
    runs-on: kube-deploy
    defaults:
      run:
        shell: bash
    container:
      image: customimage/kubectl:latest
      credentials:
        username: {{  secrets.JFROG_USERNAME  }}
        password: {{  secrets.JFROG_PASSWORD  }}
    steps:
    - name: Validate Deployment
      run: |
        if [ "$ENV" = "prod" ] && [ "$IMAGE_TAG" = "latest" ]; then
          echo "Prod deployment with latest tag is not allowed, please select semantic version"
          exit 1
        else
          echo "Vlid deployment"
        fi

    -
      name: Get Manifest file
      uses: action/checkout@v2
    -
      name: "Deploy to ${{  github.event.deployment-environment  }} cluster"
      env:
        # TODO: Change to secrets.name of your Kubernetes SA
        KUBERNETES_SERVICE_ACCOUNT: ${{  secrets.DEV_PORTAL_KUBE_SA_US  }}
        MANIFEST_NAME: manifest-${{  env.ENV  }}.yml
        CLUSTER_TYPE: "AKS"
        CLUSTER_REGION: "US"
      run: |
        # Setting up cluster configuration, config files are in kubectl image
        source /gke/gke-cluster.config
        source /aks/aks-cluster.config

        if [ "$ENV" = "prod" ]; then
          PROD=$(eval "echo \${CLUSTER_TYPE}_\${CLUSTER_REGION}PROD")
          SHARED_CLUSTER="\$${PROD}"
        else
          DEV=$(eval "echo \${CLUSTER_TYPE}_\${CLUSTER_REGION}DEV")
          SHARED_CLUSTER="\$${DEV}"
        fi

        # Set shared cluster cert and API
        eval CLUSTER_CERT="${SHARED_CLUSTER}_CERT"
        eval CLUSTER_API="${SHARED_CLUSTER}_API"

        # envsubst command will substitute environmental variables available to this step into the kubernetes manifest file
        # e.g. ${IMAGE_NAME} in the manifest-dev.yml will be replaced with an actual value
        # The output i.e. the manifest file with actual values is then piped into the kubectl
        # apply command to deploy the resource to kubernetes
        envsubst < .kube/$(MANIFEST_NAME) | \
        kubectl \
          --token="$KUBERNETES_SERVICE_ACCOUNT" \
          --certificate-authority=$CLUSTER_CERT \
          --server=$CLUSTER_API \ 
          apply -f -

    - if: github.event.inputs.deploy-environment == 'prod'
      name: Mark Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdate: true
        tag: ${{ env.IMAGE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
